/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BNS, BNSInterface } from "../BNS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "wrappedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bnsTokenId",
        type: "uint256",
      },
    ],
    name: "wrapNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bnsTokenId",
        type: "uint256",
      },
    ],
    name: "unwrapNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnsTokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601381527f427269646765204e616d65205365727669636500000000000000000000000000602080830191825283518085019094526003845262424e5360e81b908401528151919291620000729160009162000091565b5080516200008890600190602084019062000091565b50505062000174565b8280546200009f9062000137565b90600052602060002090601f016020900481019282620000c357600085556200010e565b82601f10620000de57805160ff19168380011785556200010e565b828001600101855582156200010e579182015b828111156200010e578251825591602001919060010190620000f1565b506200011c92915062000120565b5090565b5b808211156200011c576000815560010162000121565b600181811c908216806200014c57607f821691505b602082108114156200016e57634e487b7160e01b600052602260045260246000fd5b50919050565b61178180620001846000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb46514610251578063b88d4fde14610264578063c300896114610277578063c87b56dd1461028a578063e985e9c51461029d57600080fd5b80636352211e1461020257806370a08231146102155780637499cd2f1461023657806395d89b411461024957600080fd5b8063150b7a02116100de578063150b7a021461018d57806323b872dd146101b957806342842e0e146101cc578063633662ec146101df57600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e36600461149d565b6102d9565b60405190151581526020015b60405180910390f35b61014061032b565b60405161012f91906115c1565b61016061015b366004611485565b6103bd565b6040516001600160a01b03909116815260200161012f565b61018b61018636600461145c565b6103e4565b005b6101a061019b36600461134d565b6104ff565b6040516001600160e01b0319909116815260200161012f565b61018b6101c7366004611312565b610510565b61018b6101da366004611312565b610541565b6101236101ed366004611485565b60076020526000908152604090205460ff1681565b610160610210366004611485565b61055c565b6102286102233660046112bf565b6105bc565b60405190815260200161012f565b61018b61024436600461145c565b610642565b6101406107b3565b61018b61025f366004611422565b6107c2565b61018b61027236600461134d565b6107d1565b61018b61028536600461145c565b610809565b610140610298366004611485565b610912565b6101236102ab3660046112e0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061030a57506001600160e01b03198216635b5e139f60e01b145b8061032557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461033a906116e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906116e4565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b60006103c8826109b4565b506000908152600460205260409020546001600160a01b031690565b60006103ef8261055c565b9050806001600160a01b0316836001600160a01b031614156104625760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061047e575061047e81336102ab565b6104f05760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610459565b6104fa8383610a16565b505050565b630a85bd0160e11b5b949350505050565b61051a3382610a84565b6105365760405162461bcd60e51b8152600401610459906115d4565b6104fa838383610b02565b6104fa838383604051806020016040528060008152506107d1565b6000818152600260205260408120546001600160a01b0316806103255760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610459565b60006001600160a01b0382166106265760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610459565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b038181169083167357f1887a8bf19b14fc0df6fd9b2acc9af147ea85146106cb5760405162461bcd60e51b815260206004820152603060248201527f5468697320636f6e7472616374206973207370656369666963616c6c7920627560448201526f696c7420666f7220454e53204e46547360801b6064820152608401610459565b60008181526007602052604090205460ff161561072a5760405162461bcd60e51b815260206004820152601d60248201527f454e5320646f6d61696e20697320616c726561647920777261707065640000006044820152606401610459565b604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b038416906342842e0e90606401600060405180830381600087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b5050506000828152600760205260409020805460ff19166001179055506104fa3383610c66565b60606001805461033a906116e4565b6107cd338383610df1565b5050565b6107db3383610a84565b6107f75760405162461bcd60e51b8152600401610459906115d4565b61080384848484610ec0565b50505050565b6001600160a01b03811660008181526007602052604090205460ff1661088d5760405162461bcd60e51b815260206004820152603360248201527f54686520454e5320746f6b656e206973206e6f742063757272656e746c792068604482015272195b19081a5b881d1a194818dbdb9d1c9858dd606a1b6064820152608401610459565b604051632142170760e11b8152306004820152336024820152604481018390526001600160a01b038416906342842e0e90606401600060405180830381600087803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b5050506000828152600760205260409020805460ff19169055506104fa82610ef3565b6001600160a01b0381166000818152600760205260409020546060919060ff1661097e5760405162461bcd60e51b815260206004820152601960248201527f454e5320646f6d61696e206973206e6f742077726170706564000000000000006044820152606401610459565b600061098984610f33565b90508060405160200161099c9190611501565b60405160208183030381529060405292505050919050565b6000818152600260205260409020546001600160a01b0316610a135760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610459565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a4b8261055c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a908361055c565b9050806001600160a01b0316846001600160a01b03161480610ad757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806105085750836001600160a01b0316610af0846103bd565b6001600160a01b031614949350505050565b826001600160a01b0316610b158261055c565b6001600160a01b031614610b3b5760405162461bcd60e51b815260040161045990611673565b6001600160a01b038216610b9d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610459565b826001600160a01b0316610bb08261055c565b6001600160a01b031614610bd65760405162461bcd60e51b815260040161045990611673565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610cbc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610459565b6000818152600260205260409020546001600160a01b031615610d215760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610459565b6000818152600260205260409020546001600160a01b031615610d865760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610459565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b03161415610e535760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610459565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ecb848484610b02565b610ed784848484610fde565b6108035760405162461bcd60e51b815260040161045990611621565b610efc816110e8565b60008181526006602052604090208054610f15906116e4565b159050610a13576000818152600660205260408120610a1391611255565b60606000610f408361117d565b600101905060008167ffffffffffffffff811115610f6e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610f98576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fd157610fd6565b610fa2565b509392505050565b60006001600160a01b0384163b156110e057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611022903390899088908890600401611584565b602060405180830381600087803b15801561103c57600080fd5b505af192505050801561106c575060408051601f3d908101601f19168201909252611069918101906114b9565b60015b6110c6573d80801561109a576040519150601f19603f3d011682016040523d82523d6000602084013e61109f565b606091505b5080516110be5760405162461bcd60e51b815260040161045990611621565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610508565b506001610508565b60006110f38261055c565b90506110fe8261055c565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111bc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106111e8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061120657662386f26fc10000830492506010015b6305f5e100831061121e576305f5e100830492506008015b612710831061123257612710830492506004015b60648310611244576064830492506002015b600a83106103255760010192915050565b508054611261906116e4565b6000825580601f10611271575050565b601f016020900490600052602060002090810190610a1391905b8082111561129f576000815560010161128b565b5090565b80356001600160a01b03811681146112ba57600080fd5b919050565b6000602082840312156112d0578081fd5b6112d9826112a3565b9392505050565b600080604083850312156112f2578081fd5b6112fb836112a3565b9150611309602084016112a3565b90509250929050565b600080600060608486031215611326578081fd5b61132f846112a3565b925061133d602085016112a3565b9150604084013590509250925092565b60008060008060808587031215611362578081fd5b61136b856112a3565b9350611379602086016112a3565b925060408501359150606085013567ffffffffffffffff8082111561139c578283fd5b818701915087601f8301126113af578283fd5b8135818111156113c1576113c161171f565b604051601f8201601f19908116603f011681019083821181831017156113e9576113e961171f565b816040528281528a6020848701011115611401578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611434578182fd5b61143d836112a3565b915060208301358015158114611451578182fd5b809150509250929050565b6000806040838503121561146e578182fd5b611477836112a3565b946020939093013593505050565b600060208284031215611496578081fd5b5035919050565b6000602082840312156114ae578081fd5b81356112d981611735565b6000602082840312156114ca578081fd5b81516112d981611735565b600081518084526114ed8160208601602086016116b8565b601f01601f19169290920160200192915050565b7f68747470733a2f2f6d657461646174612e656e732e646f6d61696e732f676f6581527f726c692f3078353766313838376138626631396231346663306466366664396260208201526e32616363396166313437656138352f60881b60408201526000825161157781604f8501602087016116b8565b91909101604f0192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115b7908301846114d5565b9695505050505050565b6020815260006112d960208301846114d5565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60005b838110156116d35781810151838201526020016116bb565b838111156108035750506000910152565b600181811c908216806116f857607f821691505b6020821081141561171957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a1357600080fdfea26469706673582212208763b9862c6986e02bd3982f7a973416dfdde0a9441f683557b5eda91f338be264736f6c63430008040033";

export class BNS__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BNS> {
    return super.deploy(overrides || {}) as Promise<BNS>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BNS {
    return super.attach(address) as BNS;
  }
  connect(signer: Signer): BNS__factory {
    return super.connect(signer) as BNS__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNSInterface {
    return new utils.Interface(_abi) as BNSInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BNS {
    return new Contract(address, _abi, signerOrProvider) as BNS;
  }
}
